import { db } from '../db';
import { pomodoroLogTable } from '../db/schema';
import { type CreatePomodoroLogInput, type PomodoroLog } from '../schema';

/**
 * Create a Pomodoro log entry.
 * Inserts a new row into `pomodoro_logs` and returns the created record.
 * The `started_at` column is generated by the database (defaultNow).
 */
export const createPomodoroLog = async (
  input: CreatePomodoroLogInput,
): Promise<PomodoroLog> => {
  try {
    const result = await db
      .insert(pomodoroLogTable)
      .values({
        work_duration: input.work_duration,
        break_duration: input.break_duration,
        // `started_at` is omitted to use the DB default (now)
      })
      .returning()
      .execute();

    // Drizzle returns an array of inserted rows; we expect one row.
    const log = result[0];
    return {
      ...log,
    } as PomodoroLog;
  } catch (error) {
    console.error('Failed to create pomodoro log:', error);
    throw error;
  }
};
