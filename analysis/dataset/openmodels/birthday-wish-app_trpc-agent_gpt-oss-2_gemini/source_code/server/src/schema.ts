import { z } from 'zod';

// Card schema representing a birthday card
export const cardSchema = z.object({
  id: z.number(),
  name: z.string(), // Name of the person the card is for
  message: z.string(), // Personalized birthday message
  animation_type: z.enum(['confetti', 'balloons', 'fireworks']), // Type of celebratory animation
  created_at: z.coerce.date()
});

export type Card = z.infer<typeof cardSchema>;

// Input schema for creating a new card (no id, created_at is generated by DB)
export const createCardInputSchema = z.object({
  name: z.string(),
  message: z.string(),
  animation_type: z.enum(['confetti', 'balloons', 'fireworks'])
});

export type CreateCardInput = z.infer<typeof createCardInputSchema>;

// Photo schema representing a picture in the card's gallery
export const photoSchema = z.object({
  id: z.number(),
  card_id: z.number(),
  url: z.string().url(),
  caption: z.string().nullable() // Caption can be null
});

export type Photo = z.infer<typeof photoSchema>;

// Input schema for adding a photo to a card
export const addPhotoInputSchema = z.object({
  card_id: z.number(),
  url: z.string().url(),
  caption: z.string().nullable().optional() // Optional field, can be omitted or null
});

export type AddPhotoInput = z.infer<typeof addPhotoInputSchema>;
