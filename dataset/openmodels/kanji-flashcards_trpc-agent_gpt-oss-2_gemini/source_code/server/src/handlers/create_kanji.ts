import { db } from '../db';
import { kanjisTable } from '../db/schema';
import { type CreateKanjiInput, type Kanji } from '../schema';

/**
 * Creates a new kanji entry in the database and returns the created record.
 * All fields are directly inserted; `jlpt_level` is an integer column, so no
 * conversion is required. The `created_at` timestamp is generated by the DB
 * (defaultNow) and converted to a JavaScript Date object before returning.
 */
export const createKanji = async (input: CreateKanjiInput): Promise<Kanji> => {
  try {
    const result = await db
      .insert(kanjisTable)
      .values({
        character: input.character,
        meaning: input.meaning,
        onyomi: input.onyomi,
        kunyomi: input.kunyomi,
        jlpt_level: input.jlpt_level,
      })
      .returning()
      .execute();

    // The returning result is an array with the inserted row
    const kanji = result[0];
    // Ensure created_at is a Date instance (drizzle returns Date for timestamp)
    return {
      ...kanji,
    } as Kanji;
  } catch (error) {
    console.error('Kanji creation failed:', error);
    throw error;
  }
};
