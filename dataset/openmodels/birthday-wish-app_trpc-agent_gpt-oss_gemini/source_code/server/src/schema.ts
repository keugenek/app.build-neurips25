import { z } from 'zod';

// Card schema represents a birthday card with a message and a list of photo URLs.
// This schema is used for output (responses) and for input validation where appropriate.
export const cardSchema = z.object({
  id: z.number().int(), // Autoâ€‘generated primary key
  message: z.string(),
  photos: z.array(z.string()), // Array of photo URLs
  created_at: z.coerce.date(), // Timestamp when the card was created
});

export type Card = z.infer<typeof cardSchema>;

// Input schema for creating a new card (id and created_at are generated by DB).
export const createCardInputSchema = z.object({
  message: z.string(),
  photos: z.array(z.string()),
});

export type CreateCardInput = z.infer<typeof createCardInputSchema>;

// Input schema for updating an existing card. All fields are optional except the id.
export const updateCardInputSchema = z.object({
  id: z.number().int(),
  message: z.string().optional(),
  photos: z.array(z.string()).optional(),
});

export type UpdateCardInput = z.infer<typeof updateCardInputSchema>;
