import { z } from 'zod';

// Question schema representing a question stored in the database
export const questionSchema = z.object({
  id: z.number(),
  subject: z.string(),
  topic: z.string(),
  content: z.string(),
  created_at: z.coerce.date(),
});

export type Question = z.infer<typeof questionSchema>;

// Input schema for creating a new question (no id, created_at is generated by DB)
export const createQuestionInputSchema = z.object({
  subject: z.string(),
  topic: z.string(),
  content: z.string(),
});

export type CreateQuestionInput = z.infer<typeof createQuestionInputSchema>;

// Input schema for updating an existing question. All fields optional except id.
export const updateQuestionInputSchema = z.object({
  id: z.number(),
  subject: z.string().optional(),
  topic: z.string().optional(),
  content: z.string().optional(),
});

export type UpdateQuestionInput = z.infer<typeof updateQuestionInputSchema>;

// Input schema for generating a quiz
export const generateQuizInputSchema = z.object({
  subject: z.string(),
  topic: z.string(),
  count: z.number().int().positive(),
});

export type GenerateQuizInput = z.infer<typeof generateQuizInputSchema>;

// Quiz schema â€“ a generated quiz consisting of selected questions
export const quizSchema = z.object({
  id: z.number(),
  subject: z.string(),
  topic: z.string(),
  questions: z.array(questionSchema),
  created_at: z.coerce.date(),
});

export type Quiz = z.infer<typeof quizSchema>;

// Input for exporting a quiz (by quiz id)
export const exportQuizInputSchema = z.object({
  quizId: z.number()
});

export type ExportQuizInput = z.infer<typeof exportQuizInputSchema>;

// Output schema for exportQuiz handler
export const exportQuizResultSchema = z.object({
  quizId: z.number(),
  url: z.string().optional()
});

export type ExportQuizResult = z.infer<typeof exportQuizResultSchema>;

